_int_contained(_int4, _int4)
_int_contained_joinsel(internal, oid, internal, int2, internal)
_int_contained_sel(internal, oid, internal, int4)
_int_contains(_int4, _int4)
_int_contains_joinsel(internal, oid, internal, int2, internal)
_int_contains_sel(internal, oid, internal, int4)
_int_different(_int4, _int4)
_int_inter(_int4, _int4)
_int_matchsel(internal, oid, internal, int4)
_int_overlap(_int4, _int4)
_int_overlap_joinsel(internal, oid, internal, int2, internal)
_int_overlap_sel(internal, oid, internal, int4)
_int_same(_int4, _int4)
_int_union(_int4, _int4)
_intbig_in(cstring)
_intbig_out("public"."intbig_gkey")
_lt_q_regex("public"."_ltree", "public"."_lquery")
_lt_q_rregex("public"."_lquery", "public"."_ltree")
_ltq_extract_regex("public"."_ltree", "public"."lquery")
_ltq_regex("public"."_ltree", "public"."lquery")
_ltq_rregex("public"."lquery", "public"."_ltree")
_ltree_compress(internal)
_ltree_consistent(internal, "public"."_ltree", int2, oid, internal)
_ltree_extract_isparent("public"."_ltree", "public"."ltree")
_ltree_extract_risparent("public"."_ltree", "public"."ltree")
_ltree_isparent("public"."_ltree", "public"."ltree")
_ltree_penalty(internal, internal, internal)
_ltree_picksplit(internal, internal)
_ltree_r_isparent("public"."ltree", "public"."_ltree")
_ltree_r_risparent("public"."ltree", "public"."_ltree")
_ltree_risparent("public"."_ltree", "public"."ltree")
_ltree_same("public"."ltree_gist", "public"."ltree_gist", internal)
_ltree_union(internal, internal)
_ltxtq_exec("public"."_ltree", "public"."ltxtquery")
_ltxtq_extract_exec("public"."_ltree", "public"."ltxtquery")
_ltxtq_rexec("public"."ltxtquery", "public"."_ltree")
akeys("public"."hstore")
anyarray_agg_statefunc(state anyarray, value anyarray)
anyarray_concat(with_array anyarray, concat_array anyarray)
anyarray_concat(with_array anyarray, concat_element anynonarray)
anyarray_concat_uniq(with_array anyarray, concat_array anyarray)
anyarray_concat_uniq(with_array anyarray, concat_element anynonarray)
anyarray_diff(with_array anyarray, against_array anyarray)
anyarray_diff_uniq(with_array anyarray, against_array anyarray)
anyarray_enumerate(anyarray)
anyarray_is_array(anyelement)
anyarray_numeric_only(anyarray)
anyarray_ranges(from_array anyarray)
anyarray_remove(from_array anyarray, remove_array anyarray)
anyarray_remove(from_array anyarray, remove_element anynonarray)
anyarray_remove_null(from_array anyarray)
anyarray_replace_anyarray(anyarray, anyarray, anyarray)
anyarray_sort(with_array anyarray)
anyarray_uniq(with_array anyarray)
array_reverse(anyarray)
array_sum(_numeric)
avals("public"."hstore")
boolop(_int4, "public"."query_int")
bqarr_in(cstring)
bqarr_out("public"."query_int")
cash_dist(money, money)
category_trend_category_mapping_to_terms_trendpulse_v2()
category_trendpulse_v2_sync()
connectby(text, text, text, text, int4)
connectby(text, text, text, text, int4, text)
connectby(text, text, text, text, text, int4)
connectby(text, text, text, text, text, int4, text)
crosstab(text)
crosstab(text, int4)
crosstab(text, text)
crosstab2(text)
crosstab3(text)
crosstab4(text)
date_dist(date, date)
dblink(text)
dblink(text, bool)
dblink(text, text)
dblink(text, text, bool)
dblink_build_sql_delete(text, int2vector, int4, _text)
dblink_build_sql_insert(text, int2vector, int4, _text, _text)
dblink_build_sql_update(text, int2vector, int4, _text, _text)
dblink_cancel_query(text)
dblink_close(text)
dblink_close(text, bool)
dblink_close(text, text)
dblink_close(text, text, bool)
dblink_connect(text)
dblink_connect(text, text)
dblink_connect_u(text)
dblink_connect_u(text, text)
dblink_current_query()
dblink_disconnect()
dblink_disconnect(text)
dblink_error_message(text)
dblink_exec(text)
dblink_exec(text, bool)
dblink_exec(text, text)
dblink_exec(text, text, bool)
dblink_fdw_validator(options _text, catalog oid)
dblink_fetch(text, int4)
dblink_fetch(text, int4, bool)
dblink_fetch(text, text, int4)
dblink_fetch(text, text, int4, bool)
dblink_get_connections()
dblink_get_notify(conname text, OUT notify_name text, OUT be_pid int4, OUT extra text)
dblink_get_notify(OUT notify_name text, OUT be_pid int4, OUT extra text)
dblink_get_pkey(text)
dblink_get_result(text)
dblink_get_result(text, bool)
dblink_is_busy(text)
dblink_open(text, text)
dblink_open(text, text, bool)
dblink_open(text, text, text)
dblink_open(text, text, text, bool)
dblink_send_query(text, text)
defined("public"."hstore", text)
delete("public"."hstore", "public"."hstore")
delete("public"."hstore", _text)
delete("public"."hstore", text)
difference(text, text)
dmetaphone(text)
dmetaphone_alt(text)
each(hs "public"."hstore", OUT key text, OUT value text)
exist("public"."hstore", text)
exists_all("public"."hstore", _text)
exists_any("public"."hstore", _text)
fetchval("public"."hstore", text)
file_fdw_handler()
file_fdw_validator(_text, oid)
float4_dist(float4, float4)
float8_dist(float8, float8)
g_int_compress(internal)
g_int_consistent(internal, _int4, int2, oid, internal)
g_int_decompress(internal)
g_int_penalty(internal, internal, internal)
g_int_picksplit(internal, internal)
g_int_same(_int4, _int4, internal)
g_int_union(internal, internal)
g_intbig_compress(internal)
g_intbig_consistent(internal, _int4, int2, oid, internal)
g_intbig_decompress(internal)
g_intbig_penalty(internal, internal, internal)
g_intbig_picksplit(internal, internal)
g_intbig_same("public"."intbig_gkey", "public"."intbig_gkey", internal)
g_intbig_union(internal, internal)
gbt_bit_compress(internal)
gbt_bit_consistent(internal, bit, int2, oid, internal)
gbt_bit_penalty(internal, internal, internal)
gbt_bit_picksplit(internal, internal)
gbt_bit_same("public"."gbtreekey_var", "public"."gbtreekey_var", internal)
gbt_bit_union(internal, internal)
gbt_bpchar_compress(internal)
gbt_bpchar_consistent(internal, bpchar, int2, oid, internal)
gbt_bytea_compress(internal)
gbt_bytea_consistent(internal, bytea, int2, oid, internal)
gbt_bytea_penalty(internal, internal, internal)
gbt_bytea_picksplit(internal, internal)
gbt_bytea_same("public"."gbtreekey_var", "public"."gbtreekey_var", internal)
gbt_bytea_union(internal, internal)
gbt_cash_compress(internal)
gbt_cash_consistent(internal, money, int2, oid, internal)
gbt_cash_distance(internal, money, int2, oid, internal)
gbt_cash_fetch(internal)
gbt_cash_penalty(internal, internal, internal)
gbt_cash_picksplit(internal, internal)
gbt_cash_same("public"."gbtreekey16", "public"."gbtreekey16", internal)
gbt_cash_union(internal, internal)
gbt_date_compress(internal)
gbt_date_consistent(internal, date, int2, oid, internal)
gbt_date_distance(internal, date, int2, oid, internal)
gbt_date_fetch(internal)
gbt_date_penalty(internal, internal, internal)
gbt_date_picksplit(internal, internal)
gbt_date_same("public"."gbtreekey8", "public"."gbtreekey8", internal)
gbt_date_union(internal, internal)
gbt_decompress(internal)
gbt_enum_compress(internal)
gbt_enum_consistent(internal, anyenum, int2, oid, internal)
gbt_enum_fetch(internal)
gbt_enum_penalty(internal, internal, internal)
gbt_enum_picksplit(internal, internal)
gbt_enum_same("public"."gbtreekey8", "public"."gbtreekey8", internal)
gbt_enum_union(internal, internal)
gbt_float4_compress(internal)
gbt_float4_consistent(internal, float4, int2, oid, internal)
gbt_float4_distance(internal, float4, int2, oid, internal)
gbt_float4_fetch(internal)
gbt_float4_penalty(internal, internal, internal)
gbt_float4_picksplit(internal, internal)
gbt_float4_same("public"."gbtreekey8", "public"."gbtreekey8", internal)
gbt_float4_union(internal, internal)
gbt_float8_compress(internal)
gbt_float8_consistent(internal, float8, int2, oid, internal)
gbt_float8_distance(internal, float8, int2, oid, internal)
gbt_float8_fetch(internal)
gbt_float8_penalty(internal, internal, internal)
gbt_float8_picksplit(internal, internal)
gbt_float8_same("public"."gbtreekey16", "public"."gbtreekey16", internal)
gbt_float8_union(internal, internal)
gbt_inet_compress(internal)
gbt_inet_consistent(internal, inet, int2, oid, internal)
gbt_inet_penalty(internal, internal, internal)
gbt_inet_picksplit(internal, internal)
gbt_inet_same("public"."gbtreekey16", "public"."gbtreekey16", internal)
gbt_inet_union(internal, internal)
gbt_int2_compress(internal)
gbt_int2_consistent(internal, int2, int2, oid, internal)
gbt_int2_distance(internal, int2, int2, oid, internal)
gbt_int2_fetch(internal)
gbt_int2_penalty(internal, internal, internal)
gbt_int2_picksplit(internal, internal)
gbt_int2_same("public"."gbtreekey4", "public"."gbtreekey4", internal)
gbt_int2_union(internal, internal)
gbt_int4_compress(internal)
gbt_int4_consistent(internal, int4, int2, oid, internal)
gbt_int4_distance(internal, int4, int2, oid, internal)
gbt_int4_fetch(internal)
gbt_int4_penalty(internal, internal, internal)
gbt_int4_picksplit(internal, internal)
gbt_int4_same("public"."gbtreekey8", "public"."gbtreekey8", internal)
gbt_int4_union(internal, internal)
gbt_int8_compress(internal)
gbt_int8_consistent(internal, int8, int2, oid, internal)
gbt_int8_distance(internal, int8, int2, oid, internal)
gbt_int8_fetch(internal)
gbt_int8_penalty(internal, internal, internal)
gbt_int8_picksplit(internal, internal)
gbt_int8_same("public"."gbtreekey16", "public"."gbtreekey16", internal)
gbt_int8_union(internal, internal)
gbt_intv_compress(internal)
gbt_intv_consistent(internal, interval, int2, oid, internal)
gbt_intv_decompress(internal)
gbt_intv_distance(internal, interval, int2, oid, internal)
gbt_intv_fetch(internal)
gbt_intv_penalty(internal, internal, internal)
gbt_intv_picksplit(internal, internal)
gbt_intv_same("public"."gbtreekey32", "public"."gbtreekey32", internal)
gbt_intv_union(internal, internal)
gbt_macad8_compress(internal)
gbt_macad8_consistent(internal, macaddr8, int2, oid, internal)
gbt_macad8_fetch(internal)
gbt_macad8_penalty(internal, internal, internal)
gbt_macad8_picksplit(internal, internal)
gbt_macad8_same("public"."gbtreekey16", "public"."gbtreekey16", internal)
gbt_macad8_union(internal, internal)
gbt_macad_compress(internal)
gbt_macad_consistent(internal, macaddr, int2, oid, internal)
gbt_macad_fetch(internal)
gbt_macad_penalty(internal, internal, internal)
gbt_macad_picksplit(internal, internal)
gbt_macad_same("public"."gbtreekey16", "public"."gbtreekey16", internal)
gbt_macad_union(internal, internal)
gbt_numeric_compress(internal)
gbt_numeric_consistent(internal, numeric, int2, oid, internal)
gbt_numeric_penalty(internal, internal, internal)
gbt_numeric_picksplit(internal, internal)
gbt_numeric_same("public"."gbtreekey_var", "public"."gbtreekey_var", internal)
gbt_numeric_union(internal, internal)
gbt_oid_compress(internal)
gbt_oid_consistent(internal, oid, int2, oid, internal)
gbt_oid_distance(internal, oid, int2, oid, internal)
gbt_oid_fetch(internal)
gbt_oid_penalty(internal, internal, internal)
gbt_oid_picksplit(internal, internal)
gbt_oid_same("public"."gbtreekey8", "public"."gbtreekey8", internal)
gbt_oid_union(internal, internal)
gbt_text_compress(internal)
gbt_text_consistent(internal, text, int2, oid, internal)
gbt_text_penalty(internal, internal, internal)
gbt_text_picksplit(internal, internal)
gbt_text_same("public"."gbtreekey_var", "public"."gbtreekey_var", internal)
gbt_text_union(internal, internal)
gbt_time_compress(internal)
gbt_time_consistent(internal, time, int2, oid, internal)
gbt_time_distance(internal, time, int2, oid, internal)
gbt_time_fetch(internal)
gbt_time_penalty(internal, internal, internal)
gbt_time_picksplit(internal, internal)
gbt_time_same("public"."gbtreekey16", "public"."gbtreekey16", internal)
gbt_time_union(internal, internal)
gbt_timetz_compress(internal)
gbt_timetz_consistent(internal, timetz, int2, oid, internal)
gbt_ts_compress(internal)
gbt_ts_consistent(internal, timestamp, int2, oid, internal)
gbt_ts_distance(internal, timestamp, int2, oid, internal)
gbt_ts_fetch(internal)
gbt_ts_penalty(internal, internal, internal)
gbt_ts_picksplit(internal, internal)
gbt_ts_same("public"."gbtreekey16", "public"."gbtreekey16", internal)
gbt_ts_union(internal, internal)
gbt_tstz_compress(internal)
gbt_tstz_consistent(internal, timestamptz, int2, oid, internal)
gbt_tstz_distance(internal, timestamptz, int2, oid, internal)
gbt_uuid_compress(internal)
gbt_uuid_consistent(internal, uuid, int2, oid, internal)
gbt_uuid_fetch(internal)
gbt_uuid_penalty(internal, internal, internal)
gbt_uuid_picksplit(internal, internal)
gbt_uuid_same("public"."gbtreekey32", "public"."gbtreekey32", internal)
gbt_uuid_union(internal, internal)
gbt_var_decompress(internal)
gbt_var_fetch(internal)
gbtreekey16_in(cstring)
gbtreekey16_out("public"."gbtreekey16")
gbtreekey32_in(cstring)
gbtreekey32_out("public"."gbtreekey32")
gbtreekey4_in(cstring)
gbtreekey4_out("public"."gbtreekey4")
gbtreekey8_in(cstring)
gbtreekey8_out("public"."gbtreekey8")
gbtreekey_var_in(cstring)
gbtreekey_var_out("public"."gbtreekey_var")
ghstore_compress(internal)
ghstore_consistent(internal, "public"."hstore", int2, oid, internal)
ghstore_decompress(internal)
ghstore_in(cstring)
ghstore_out("public"."ghstore")
ghstore_penalty(internal, internal, internal)
ghstore_picksplit(internal, internal)
ghstore_same("public"."ghstore", "public"."ghstore", internal)
ghstore_union(internal, internal)
gin_consistent_hstore(internal, int2, "public"."hstore", int4, internal, internal)
gin_extract_hstore("public"."hstore", internal)
gin_extract_hstore_query("public"."hstore", internal, int2, internal, internal)
gin_extract_query_trgm(text, internal, int2, internal, internal, internal, internal)
gin_extract_value_trgm(text, internal)
gin_trgm_consistent(internal, int2, text, int4, internal, internal, internal, internal)
gin_trgm_triconsistent(internal, int2, text, int4, internal, internal, internal)
ginint4_consistent(internal, int2, _int4, int4, internal, internal, internal, internal)
ginint4_queryextract(_int4, internal, int2, internal, internal, internal, internal)
gtrgm_compress(internal)
gtrgm_consistent(internal, text, int2, oid, internal)
gtrgm_decompress(internal)
gtrgm_distance(internal, text, int2, oid, internal)
gtrgm_in(cstring)
gtrgm_out("public"."gtrgm")
gtrgm_penalty(internal, internal, internal)
gtrgm_picksplit(internal, internal)
gtrgm_same("public"."gtrgm", "public"."gtrgm", internal)
gtrgm_union(internal, internal)
hs_concat("public"."hstore", "public"."hstore")
hs_contained("public"."hstore", "public"."hstore")
hs_contains("public"."hstore", "public"."hstore")
hstore(_text)
hstore(_text, _text)
hstore(record)
hstore(text, text)
hstore_cmp("public"."hstore", "public"."hstore")
hstore_eq("public"."hstore", "public"."hstore")
hstore_ge("public"."hstore", "public"."hstore")
hstore_gt("public"."hstore", "public"."hstore")
hstore_hash("public"."hstore")
hstore_in(cstring)
hstore_le("public"."hstore", "public"."hstore")
hstore_lt("public"."hstore", "public"."hstore")
hstore_ne("public"."hstore", "public"."hstore")
hstore_out("public"."hstore")
hstore_recv(internal)
hstore_send("public"."hstore")
hstore_to_array("public"."hstore")
hstore_to_json("public"."hstore")
hstore_to_json_loose("public"."hstore")
hstore_to_jsonb("public"."hstore")
hstore_to_jsonb_loose("public"."hstore")
hstore_to_matrix("public"."hstore")
hstore_version_diag("public"."hstore")
icount(_int4)
idx(_int4, int4)
index("public"."ltree", "public"."ltree")
index("public"."ltree", "public"."ltree", int4)
int2_dist(int2, int2)
int4_dist(int4, int4)
int8_dist(int8, int8)
intarray_del_elem(_int4, int4)
intarray_push_array(_int4, _int4)
intarray_push_elem(_int4, int4)
interval_dist(interval, interval)
intset(int4)
intset_subtract(_int4, _int4)
intset_union_elem(_int4, int4)
is_valid_json(p_json text)
is_valid_json_array(p_json text, p_element text)
isdefined("public"."hstore", text)
isexists("public"."hstore", text)
isnan(float8)
json_arr2brands_arr(_js json)
json_arr2category_tags_arr(_js json)
json_arr2trendpuluse_arr(_js json)
json_array_concat(from_data json, merge_data json)
jsonb_array_uniq(from_json json)
lca("public"."_ltree")
lca("public"."ltree", "public"."ltree")
lca("public"."ltree", "public"."ltree", "public"."ltree")
lca("public"."ltree", "public"."ltree", "public"."ltree", "public"."ltree")
lca("public"."ltree", "public"."ltree", "public"."ltree", "public"."ltree", "public"."ltree")
lca("public"."ltree", "public"."ltree", "public"."ltree", "public"."ltree", "public"."ltree", "public"."ltree")
lca("public"."ltree", "public"."ltree", "public"."ltree", "public"."ltree", "public"."ltree", "public"."ltree", "public"."ltree")
lca("public"."ltree", "public"."ltree", "public"."ltree", "public"."ltree", "public"."ltree", "public"."ltree", "public"."ltree", "public"."ltree")
levenshtein(text, text)
levenshtein(text, text, int4, int4, int4)
levenshtein_less_equal(text, text, int4)
levenshtein_less_equal(text, text, int4, int4, int4, int4)
lquery_in(cstring)
lquery_out("public"."lquery")
lt_q_regex("public"."ltree", "public"."_lquery")
lt_q_rregex("public"."_lquery", "public"."ltree")
ltq_regex("public"."ltree", "public"."lquery")
ltq_rregex("public"."lquery", "public"."ltree")
ltree2text("public"."ltree")
ltree_addltree("public"."ltree", "public"."ltree")
ltree_addtext("public"."ltree", text)
ltree_cmp("public"."ltree", "public"."ltree")
ltree_compress(internal)
ltree_consistent(internal, "public"."ltree", int2, oid, internal)
ltree_decompress(internal)
ltree_eq("public"."ltree", "public"."ltree")
ltree_ge("public"."ltree", "public"."ltree")
ltree_gist_in(cstring)
ltree_gist_out("public"."ltree_gist")
ltree_gt("public"."ltree", "public"."ltree")
ltree_in(cstring)
ltree_isparent("public"."ltree", "public"."ltree")
ltree_le("public"."ltree", "public"."ltree")
ltree_lt("public"."ltree", "public"."ltree")
ltree_ne("public"."ltree", "public"."ltree")
ltree_out("public"."ltree")
ltree_penalty(internal, internal, internal)
ltree_picksplit(internal, internal)
ltree_risparent("public"."ltree", "public"."ltree")
ltree_same("public"."ltree_gist", "public"."ltree_gist", internal)
ltree_textadd(text, "public"."ltree")
ltree_union(internal, internal)
ltreeparentsel(internal, oid, internal, int4)
ltxtq_exec("public"."ltree", "public"."ltxtquery")
ltxtq_in(cstring)
ltxtq_out("public"."ltxtquery")
ltxtq_rexec("public"."ltxtquery", "public"."ltree")
metaphone(text, int4)
nlevel("public"."ltree")
normal_rand(int4, float8, float8)
oid_dist(oid, oid)
populate_record(anyelement, "public"."hstore")
querytree("public"."query_int")
rboolop("public"."query_int", _int4)
row_estimator(query text)
set_limit(float4)
show_limit()
show_trgm(text)
similarity(text, text)
similarity_dist(text, text)
similarity_op(text, text)
skeys("public"."hstore")
slice("public"."hstore", _text)
slice_array("public"."hstore", _text)
sort(_int4)
sort(_int4, text)
sort_asc(_int4)
sort_desc(_int4)
soundex(text)
subarray(_int4, int4)
subarray(_int4, int4, int4)
subltree("public"."ltree", int4, int4)
subpath("public"."ltree", int4)
subpath("public"."ltree", int4, int4)
svals("public"."hstore")
taxonomy_tags_migration()
tconvert(text, text)
term_log_migration()
text2ltree(text)
text_soundex(text)
time_dist(time, time)
tl_add_balenciaga_market()
tl_add_bottegaveneta_market()
tl_add_brioni_market()
tl_add_chanel_market()
tl_add_dolcegabbana_market()
tl_add_hermes_market()
tl_add_louisvuitton_market()
tl_add_prada_market()
tl_add_ysl_market()
tl_append_event_log(p_entity "public"."ltree", p_attribute "public"."ltree", p_value text)
tl_batch_update_category(p_idents _int4, p_filter text, p_gender jsonb, p_trend_category jsonb, p_trend_type jsonb)
tl_batch_update_category(p_idents _int4, p_filter text, p_gender jsonb, p_trend_category jsonb, p_trend_type jsonb, p_update_type int4)
tl_batch_update_category_2(p_idents _int4, p_filter text, p_gender jsonb, p_trend_category jsonb, p_trend_type jsonb, p_update_type int4)
tl_batch_upsert_term_log_type_3(p_ids _text, p_filter text, p_gender jsonb, p_trend_category jsonb, p_trend_type jsonb, p_update_type int4, p_user_id int8)
tl_batch_upsert_term_log_type_3(p_ids _text, p_filter text, p_gender jsonb, p_trend_category jsonb, p_trend_type jsonb, p_user_id int8)
tl_batch_upsert_term_log_type_3_2(p_ids _text, p_filter text, p_gender jsonb, p_trend_category jsonb, p_trend_type jsonb, p_update_type int4, p_user_id int8)
tl_brands_errors()
tl_delete_brands_adwords_codes_prod_log_type_2(p_code text, OUT ident int4)
tl_delete_brands_log_type_2(p_code text, p_user_id int8)
tl_delete_brands_ss_r_code_log_type_2(p_code text, OUT ident int4)
tl_delete_brands_ss_syn_code_log_type_2(p_code text, OUT ident int4)
tl_delete_category(p_ident int4)
tl_delete_query_builder(p_ident int4)
tl_delete_search_trend_category(p_ident int4, p_searches _text)
tl_delete_term(p_search text)
tl_delete_term_log_type_2(p_search text, p_user_id int8)
tl_delete_term_tmp(p_search text)
tl_delete_trendpulse_summary_tsa_low_search_volume(p_date_of_month date, p_period int4)
tl_fix_brands_base()
tl_fix_term_tags()
tl_generate_brandpulse()
tl_generate_error_brands()
tl_generate_error_term()
tl_generate_query_builder(p_ident int4)
tl_generate_trendpulse()
tl_get_adwords_targetingideaservice_searches(p_geo_type text, p_keyword _text)
tl_get_adwords_targetingideaservice_top_searches(p_geo_type text, p_keyword _text, p_month text, p_geo _text)
tl_get_brand_by_code(p_code _text)
tl_get_brandpulse()
tl_get_brandpulse_to_refresh_web()
tl_get_brands_ss_r_rank_by_name(p_name text, p_limit int4, p_offset int4)
tl_get_brands_ss_region(p_region text, p_search text)
tl_get_brands_stats(p_brands _text, p_from date, p_to date, p_platforms _text)
tl_get_brands_stats_report(p_brands _text, p_from date, p_to date, p_platforms _text)
tl_get_category_by_ident(p_ident _int4)
tl_get_category_by_ident_2(p_ident _int4)
tl_get_category_from_term(p_term text)
tl_get_category_terms()
tl_get_dashboard_users(p_ident int4, p_username text, p_email text)
tl_get_diff_google_trend_weekly_distinct_keyword()
tl_get_gender_ident(p_jsonb jsonb)
tl_get_gender_meta_ident(p_jsonb jsonb)
tl_get_google_and_social_platforms_status(p_search _text)
tl_get_google_and_social_platforms_status(p_search _text, p_type text)
tl_get_google_events_status()
tl_get_keyword_refresh_status(p_search _text)
tl_get_retailers_ss_region(p_region text, p_search text)
tl_get_search_terms_not_refreshed_for_n_months(p_month int4)
tl_get_search_terms_tsa_maturity_v2_by_search(p_keyword _text)
tl_get_search_volume(p_keyword _text)
tl_get_search_volume_by_keyword(k text, OUT int8)
tl_get_search_volume_by_keyword_array(ks _text)
tl_get_social_terms(p_type text, p_term text)
tl_get_stats_fans_move_by_date(p_date date, p_max_rank int4)
tl_get_status_term(p_search _text)
tl_get_stem_match_terms(p_search text)
tl_get_term_by_search(p_search _text)
tl_get_tmp_search_volume(p_keyword _text)
tl_get_tmp_social_terms(p_type text, p_term text)
tl_get_trend_category_ident(p_jsonb jsonb)
tl_get_trend_category_meta_ident(p_jsonb jsonb)
tl_get_trend_type_ident(p_jsonb jsonb)
tl_get_trend_type_meta_ident(p_jsonb jsonb)
tl_get_trendpulse()
tl_get_trendpulse_to_refresh_web()
tl_get_ts_adwords(p_code text)
tl_get_ts_posts(p_code text)
tl_get_ts_posts_latest(p_code text)
tl_get_ts_stats(p_code text)
tl_get_ts_stats_latest(p_code text)
tl_hotfix_adwords_search_volume_funs(p_keyword text, p_sample_geo int4)
tl_insert_brands_adwords_codes_prod_log_type_1(p_code text, p_name text, prod_id int4, prod_cat text, OUT ident int4)
tl_insert_brands_log_type_1(p_code text, p__id text, p_key text, p_name text, p_search text, p_search_exclude json, p_code2 text, p_search_modified_at timestamptz, p_runway text, p_link text, p_description text, p_base _int4, p_note text, p_tags json, p_hash _text, p_facebook_username text, p_facebook_id text, p_youtube_username text, p_twitter_username text, p_pinterest_username text, p_instagram_username text, p_tumblr_username text, p_dimension_0 bool, p_dimension_1 bool, p_dimension_2 bool, p_dimension_3 bool, p_dimension_4 bool, p_publish bool, p_hashtag_instagram text, p_user_id int8)
tl_insert_brands_log_type_1(p_code text, p__id text, p_key text, p_name text, p_search text, p_search_exclude json, p_code2 text, p_search_modified_at timestamptz, p_runway text, p_link text, p_description text, p_base _int4, p_note text, p_tags json, p_hash _text, p_facebook_username text, p_facebook_id text, p_youtube_username text, p_twitter_username text, p_pinterest_username text, p_instagram_username text, p_tumblr_username text, p_related _text, p_dimension_0 bool, p_dimension_1 bool, p_dimension_2 bool, p_dimension_3 bool, p_dimension_4 bool, p_publish bool, p_hashtag_instagram text, p_popularity_score numeric, p_user_id int8)
tl_insert_brands_log_type_1(p_code text, p__id text, p_key text, p_name text, p_search text, p_search_exclude json, p_code2 text, p_search_modified_at timestamptz, p_runway text, p_link text, p_description text, p_base _int4, p_note text, p_tags json, p_hash _text, p_facebook_username text, p_facebook_id text, p_youtube_username text, p_twitter_username text, p_pinterest_username text, p_instagram_username text, p_tumblr_username text, p_related _text, p_dimension_0 bool, p_dimension_1 bool, p_dimension_2 bool, p_dimension_3 bool, p_dimension_4 bool, p_publish bool, p_hashtag_instagram text, p_user_id int8)
tl_insert_brands_log_type_3()
tl_insert_brands_ss_r_code_log_type_1(bcode text, bname text, rid text, rname text, OUT ident int4)
tl_insert_brands_ss_syn_code_log_type_1(p_ssid text, p_code text, p_name text, p_ssname text, p_syn bool, OUT ident int4)
tl_insert_term_log_type_1(p__id text, p_search text, p_note text, p_key text, p_name text, p_search_exclude json, p_search_modified_at timestamptz, p_group_md5 text, p_social_include _text, p_tags _int4, p_hashtag_instagram text, p_related _text, p_market_category jsonb, p_market_categoryv2 jsonb, p_trend_category jsonb, p_gender jsonb, p_trend_type jsonb, p_publish bool, p_popularity_score numeric, p_dimension_0 bool, p_dimension_1 bool, p_dimension_2 bool, p_dimension_3 bool, p_dimension_4 bool, p_user_id int8)
tl_insert_term_log_type_1_2(p__id text, p_search text, p_note text, p_key text, p_name text, p_search_exclude json, p_search_modified_at timestamptz, p_group_md5 text, p_social_include _text, p_tags _int4, p_hashtag_instagram text, p_related _text, p_market_category jsonb, p_market_categoryv2 jsonb, p_trend_category jsonb, p_gender jsonb, p_trend_type jsonb, p_publish bool, p_popularity_score numeric, p_dimension_0 bool, p_dimension_1 bool, p_dimension_2 bool, p_dimension_3 bool, p_dimension_4 bool, p_user_id int8)
tl_preprocess_refreshed_term(terms _text)
tl_publish_view_m_trendpulse_summary_sets_v2_checking()
tl_qb_alert_checker(p_alert_type text)
tl_refresh_brands_ss_code_sync_log()
tl_refresh_brands_ss_code_sync_log_notify()
tl_refresh_brands_ss_retailers_sync_log()
tl_refresh_brands_ss_retailers_sync_log_notify()
tl_refresh_qb_mat_view_by_name(p_name text)
tl_refresh_search_terms_popularity_score()
tl_refresh_search_terms_tsa_maturity_v2()
tl_refresh_taxonomy_trend_category_m_view()
tl_refresh_taxonomy_trend_gender_m_view()
tl_refresh_taxonomy_trend_type_m_view()
tl_refresh_term_m_view()
tl_refreshing_adwords_targetingideaserivce_low_search_volume(p_type text, p_search text, p_name text)
tl_refreshing_view_m_trendpulse_summary_sets_v2(p_type text)
tl_remove_adwords_search_volume_element(json_in json, conditional date)
tl_reset_qb_views()
tl_set_google_events(p_code text, p_search text, p_type text, p_check_trend_date timestamp, p_check_adwords_date timestamp)
tl_set_google_events_monthly(p_check_trend_date timestamp, p_check_adwords_date timestamp)
tl_set_publish_brand(p_code text, p_search text, p_current_status bool)
tl_set_publish_term(p_search text, p_current_status bool)
tl_sync_brands(p_code text)
tl_sync_search_term_monthly()
tl_sync_term(p_search text)
tl_sync_trendpulse_summary_market(p_type text)
tl_sync_trendpulse_summary_social(p_type text)
tl_sync_trendpulse_summary_tsa()
tl_sync_tsa_volume(p_new_only bool)
tl_taxonomy_tags_mapping(p_node_type text, p_idents _int4)
tl_term_errors()
tl_test(p_move_node jsonb)
tl_update_taxonomy_tags(p_node_type text, p_update_node jsonb, p_move_node jsonb, p_delete_ids _text)
tl_update_taxonomy_trend_category_tags(p_update_node jsonb, p_move_node jsonb, p_delete_ids _text)
tl_update_taxonomy_trend_gender_tags(p_update_node jsonb, p_move_node jsonb, p_delete_ids _text)
tl_update_taxonomy_trend_type_tags(p_update_node jsonb, p_move_node jsonb, p_delete_ids _text)
tl_upsert_brands_tmp(p_code text, p__id text, p_key text, p_name text, p_search text, p_search_exclude json, p_code2 text, p_runway text, p_link text, p_description text, p_base _int4, p_note text, p_tags json, p_hash _text, p_facebook_username text, p_facebook_id text, p_youtube_username text, p_twitter_username text, p_pinterest_username text, p_instagram_username text, p_tumblr_username text, p_dimension_0 bool, p_dimension_1 bool, p_dimension_2 bool, p_dimension_3 bool, p_dimension_4 bool, p_hashtag_instagram text)
tl_upsert_category(p_ident int4, p__id text, p_note text, p_name text, p_taxonomy "public"."ltree", p_name_brand_pulse text, p_description text, p_market_category jsonb, p_market_categoryv2 jsonb, p_trend_category jsonb, p_gender jsonb, p_trend_type jsonb)
tl_upsert_category_2(p_ident int4, p__id text, p_note text, p_name text, p_taxonomy "public"."ltree", p_name_brand_pulse text, p_description text, p_market_category jsonb, p_market_categoryv2 jsonb, p_trend_category jsonb, p_gender jsonb, p_trend_type jsonb)
tl_upsert_category_group(p_id text, p_size int4, p_group json)
tl_upsert_dashboard_users(p_username text, p_password text, p_email text, p_role text, p_password_hash text, p_password_salt text, p_change_password_token text)
tl_upsert_google_events_log(p_code text, p_search text, p_type text, p_trend_issue text, p_volume_worldwide_issue text, p_volume_regional_issue text, p_volume_regional_removed bool, p_fix_date timestamptz, p_maturity text, p_search_volume int8, p_trend_date timestamptz, p_volume_worldwide_date timestamptz, p_volume_regional_date timestamptz, p_publish bool)
tl_upsert_query_builder(p_ident int4, p_name text, p_type "public"."ltree", p_description text, p_sql text, p_lim int4, p_mat bool, p_mat_freq interval, p_mat_last_refresh timestamptz, p_p1 jsonb, p_p2 jsonb, p_p3 jsonb)
tl_upsert_search_term(p__id text, p_keyword text, p_week json, p_region json, p_city json, p_topsearch json, p_risingsearch json, p_subregion json, p__extra_props text, p_date_type text)
tl_upsert_search_term_2(p__id text, p_keyword text, p_week json, p_region json, p_city json, p_topsearch json, p_risingsearch json, p_subregion json, p__extra_props text, p_date_type text)
tl_upsert_stats_fans_move_meta(p_units text, p_span int4, p_platform text, p_date timestamptz, p_username text, p_uid text, p_hide bool, p_p1 json, p_p2 json, p_p3 json)
tl_upsert_term(p__id text, p_search text, p_note text, p_key text, p_name text, p_search_exclude json, p_search_modified_at timestamptz, p_group_md5 text, p_social_include _text, p_tags _int4, p_publish bool, p_hashtag_instagram text, p_related _text, p_popularity_score numeric, p_market_category jsonb, p_market_categoryv2 jsonb)
tl_upsert_term_tmp(p__id text, p_search text, p_note text, p_key text, p_name text, p_search_exclude json, p_group_md5 text, p_social_include _text, p_tags _int4, p_hashtag_instagram text, p_market_category jsonb)
tp_refresh_matview()
trendpulse_mappings_terms()
ts_dist(timestamp, timestamp)
tstz_dist(timestamptz, timestamptz)
uniq(_int4)
utl_dates_first_dow_of_month(dow_in text, date_in date)
utl_dates_next_dow(dow_in text, date_in date)
uuid_generate_v1()
uuid_generate_v1mc()
uuid_generate_v3(namespace uuid, name text)
uuid_generate_v4()
uuid_generate_v5(namespace uuid, name text)
uuid_nil()
uuid_ns_dns()
uuid_ns_oid()
uuid_ns_url()
uuid_ns_x500()
word_similarity(text, text)
word_similarity_commutator_op(text, text)
word_similarity_dist_commutator_op(text, text)
word_similarity_dist_op(text, text)
word_similarity_op(text, text)